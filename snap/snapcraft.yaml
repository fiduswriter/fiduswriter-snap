name: fiduswriter
adopt-info: fiduswriter
summary: 'An academic collaborative word processor'
base: core20
architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf
  - build-on: ppc64el
  - build-on: s390x
confinement: strict
grade: stable
epoch: 1*
parts:
  fiduswriter:
    plugin: python
    parse-info:
      - setup.py
    source: https://github.com/fiduswriter/fiduswriter.git
    source-branch: master
    after: [fiduswriter-patches, mysql]
    override-pull: |
      snapcraftctl pull
      git apply $SNAPCRAFT_STAGE/fiduswriter-set-defaults.patch
    python-packages:
      - $SNAPCRAFT_PART_SRC[books,citation-api-import,languagetool,ojs,phplist,github-export]
      - django-otp
      - qrcode
    requirements:
      - fiduswriter/requirements.txt
      - fiduswriter/mysql-requirements.txt
    stage-packages:
      - libjpeg-dev
      - python3-dev
      - python3-pip
      - python3-distutils
      - gettext
      - zlib1g-dev
      - wget
      - build-essential
      - libmagic1
      - nano
    stage:
      # Remove scripts that we'll be replacing with our own
      - -lib/python3.6/site-packages/fiduswriter/configuration.py-default

  fiduswriter-customizations:
    plugin: dump
    source: src/fiduswriter/
    after: [fiduswriter]
    organize:
      configuration.py: lib/python3.6/site-packages/fiduswriter/configuration.py-default

  languagetool:
    plugin: nil
    override-build: |
      wget -O $SNAPCRAFT_PART_BUILD/LanguageTool-5.0.zip https://languagetool.org/download/LanguageTool-5.0.zip
      unzip $SNAPCRAFT_PART_BUILD/LanguageTool-5.0.zip
      mv $SNAPCRAFT_PART_BUILD/LanguageTool-5.0 $SNAPCRAFT_PART_INSTALL/lt
    # mv $SNAPCRAFT_PART_INSTALL/usr/lib/jvm/java-11-openjdk-* $SNAPCRAFT_PART_INSTALL/usr/lib/jvm/java-11-openjdk
    build-packages:
      - wget
      - unzip
    stage-packages:
      - openjdk-11-jre
      - ca-certificates
      - ca-certificates-java
    stage:
      - -usr/lib/jvm/java-11-openjdk-$SNAP_ARCH/lib/security/cacerts

  languagetool-script:
    plugin: dump
    source: src/languagetool/

  npm:
    plugin: npm
    npm-node-version: 12.18.3
    source: src/npm
    prime:
      - -package.json
      - -package-lock.json
    organize:
      LICENSE: LICENSE-npm

  # Download the boost headers for MySQL. Note that the version used may need to
  # be updated if the version of MySQL changes.
  boost:
    plugin: dump
    source: https://github.com/kyrofa/boost_tarball/raw/master/boost_1_59_0.tar.gz
    source-checksum: sha1/5123209db194d66d69a9cfa5af8ff473d5941d97
    # When building MySQL, the headers in the source directory 'boost/' are
    # required. Previously, using the 'copy' plugin, the whole archive was put
    # under 'boost/', making the headers reside in 'boost/boost/'. Due to a bug,
    # we now only stage the 'boost/' directory without moving it.
    #
    # Bug: https://bugs.launchpad.net/snapcraft/+bug/1757093
    stage:
      - boost/
    prime:
      - -*

  mysql:
    plugin: cmake
    source: https://github.com/mysql/mysql-server.git
    source-tag: mysql-5.7.31
    source-depth: 1
    override-pull: |
      snapcraftctl pull
      git apply $SNAPCRAFT_STAGE/mysql-support-compile-time-disabling-of-setpriority.patch
    after: [boost, mysql-patches]
    cmake-parameters:
      - -DWITH_BOOST=$SNAPCRAFT_STAGE
      - -DWITH_INNODB_PAGE_CLEANER_PRIORITY=OFF
      - -DCMAKE_INSTALL_PREFIX=/
      - -DBUILD_CONFIG=mysql_release
      - -DWITH_UNIT_TESTS=OFF
      - -DWITH_EMBEDDED_SERVER=OFF
      - -DWITH_ARCHIVE_STORAGE_ENGINE=OFF
      - -DWITH_BLACKHOLE_STORAGE_ENGINE=OFF
      - -DWITH_FEDERATED_STORAGE_ENGINE=OFF
      - -DWITH_PARTITION_STORAGE_ENGINE=OFF
      - -DINSTALL_MYSQLTESTDIR=
    build-packages:
      - pkg-config
      - wget
      - g++
      - make
      - cmake
      - bison
      - libncurses5-dev
      - libaio-dev
      - libssl-dev
    stage-packages:
      - libaio1
    stage:
      # Remove scripts that we'll be replacing with our own
      - -support-files/mysql.server
      - -COPYING
    prime:
      # Remove scripts that we'll be replacing with our own
      - -support-files/mysql.server

      # Remove unused binaries that waste space
      - -bin/innochecksum
      - -bin/lz4_decompress
      - -bin/myisam*
      - -bin/mysqladmin
      - -bin/mysqlbinlog
      - -bin/mysql_client_test
      - -bin/mysql_config*
      - -bin/mysqld_multi
      - -bin/mysqlimport
      - -bin/mysql_install_db
      - -bin/mysql_plugin
      - -bin/mysqlpump
      - -bin/mysql_secure_installation
      - -bin/mysqlshow
      - -bin/mysqlslap
      - -bin/mysql_ssl_rsa_setup
      - -bin/mysqltest
      - -bin/mysql_tzinfo_to_sql
      - -bin/perror
      - -bin/replace
      - -bin/resolveip
      - -bin/resolve_stack_dump
      - -bin/zlib_decompress

  # Copy over our MySQL scripts
  mysql-customizations:
    plugin: dump
    source: src/mysql/

  mysql-patches:
    source: src/mysql-patches
    plugin: dump
    prime:
      - -*

  fiduswriter-patches:
    source: src/fiduswriter-patches
    plugin: dump
    prime:
      - -*

  common:
    plugin: dump
    source: src/common/


  hooks:
    plugin: dump
    source: src/hooks/
    organize:
      bin/: snap/hooks/

hooks:
  configure:
    plugs:
      - network-bind
      - network-control
      - network-observe

apps:
  daemon:
    command: 'bin/run-fiduswriter.py'
    daemon: simple
    plugs:
      - network-bind
      - network-control
      - network-observe

  manage:
    command: 'bin/manage.sh'
    plugs:
      - network-bind
      - network-control
      - network-observe
    adapter: full

  createsuperuser:
    command: 'bin/manage.sh createsuperuser'

  configure:
    command: 'bin/configure.py'
    plugs:
      - network-bind
      - network-control
      - network-observe
    adapter: full

  # MySQL daemon
  mysql:
    command: bin/start_mysql
    stop-command: support-files/mysql.server stop
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]

  # MySQL client
  mysql-client:
    command: bin/run-mysql
    plugs: [network, network-bind]

  mysqldump:
    command: bin/dump-mysql
    plugs: [network, network-bind]

  languagetool:
    command: bin/run-languagetool.py
    environment:
      JAVA_HOME: $SNAP/usr/lib/jvm/java-11-openjdk-$SNAP_ARCH
      JAVA_BIN: $SNAP/usr/lib/jvm/java-8-openjdk-$SNAP_ARCH/bin/java
      PATH: $JAVA_HOME/bin:$PATH
    daemon: simple
    restart-condition: always
    plugs: [network-bind]

layout:
  /etc/magic:
    bind-file: $SNAP/etc/magic
  /etc/wgetrc:
    bind-file: $SNAP/etc/wgetrc
  /etc/nanorc:
    bind-file: $SNAP/etc/nanorc
  /usr/share/nano:
    bind: $SNAP/usr/share/nano
