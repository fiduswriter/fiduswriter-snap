name: fiduswriter
adopt-info: fiduswriter
summary: 'An academic collaborative word processor'
base: core20
architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf
  - build-on: ppc64el
  - build-on: s390x
confinement: strict
grade: stable
epoch: 6*
parts:
  fiduswriter:
    plugin: python
    parse-info:
      - setup.py
    source: https://github.com/fiduswriter/fiduswriter.git
    source-branch: main
    after: [fiduswriter-patches, mysql]
    override-build: | # Removing here rather than in stage below due to snapcraft issue https://forum.snapcraft.io/t/conflicting-files-sometimes/19818/2
      export CRYPTOGRAPHY_DONT_BUILD_RUST=1
      snapcraftctl build
      rm $SNAPCRAFT_PART_INSTALL/lib/python3.8/site-packages/fiduswriter/configuration.py-default
    override-pull: |
      snapcraftctl pull
      git apply $SNAPCRAFT_STAGE/fiduswriter-set-defaults.patch
    python-packages:
      - $SNAPCRAFT_PART_SRC[books,citation-api-import,languagetool,ojs,phplist,gitrepo-export]
      - django-otp
      - qrcode
    requirements:
      - fiduswriter/requirements.txt
      - fiduswriter/mysql-requirements.txt
    build-packages:
      - libjpeg-dev
      - gettext
      - python3-wheel
      - python3-pip
      - python3-cryptography
      - libffi-dev
      - rustc
    stage-packages:
      - libjpeg-dev
      - python3-dev
      - python3-pip
      - python3-distutils
      - python3-wheel
      - gettext
      - zlib1g-dev
      - wget
      - build-essential
      - libmagic1
      - nano
    # stage:
    #   # Remove scripts that we'll be replacing with our own
    #   - -lib/python3.8/site-packages/fiduswriter/configuration.py-default

  fiduswriter-customizations:
    plugin: dump
    source: src/fiduswriter/
    after: [fiduswriter]
    organize:
      configuration.py: lib/python3.8/site-packages/fiduswriter/configuration.py-default

  languagetool:
    plugin: nil
    override-build: |
      wget -O $SNAPCRAFT_PART_BUILD/LanguageTool-5.6.zip https://languagetool.org/download/LanguageTool-5.6.zip
      unzip $SNAPCRAFT_PART_BUILD/LanguageTool-5.6.zip
      mv $SNAPCRAFT_PART_BUILD/LanguageTool-5.6 $SNAPCRAFT_PART_INSTALL/lt
      rm $SNAPCRAFT_PART_INSTALL/usr/lib/jvm/java-11-openjdk-$SNAP_ARCH/lib/security/cacerts
      rm $SNAPCRAFT_PART_INSTALL/usr/lib/jvm/java-11-openjdk-$SNAP_ARCH/lib/security/blacklisted.certs
    # mv $SNAPCRAFT_PART_INSTALL/usr/lib/jvm/java-11-openjdk-* $SNAPCRAFT_PART_INSTALL/usr/lib/jvm/java-11-openjdk
    build-packages:
      - wget
      - unzip
    stage-packages:
      - openjdk-11-jre
      - ca-certificates
      - ca-certificates-java
    # stage:
    #  - -usr/lib/jvm/java-11-openjdk-$SNAP_ARCH/lib/security/cacerts

  languagetool-script:
    plugin: dump
    source: src/languagetool/

  npm:
    plugin: npm
    npm-node-version: 12.18.3
    source: src/npm
    prime:
      - -package.json
      - -package-lock.json
    organize:
      LICENSE: LICENSE-npm

  boost:
    plugin: dump
    source: https://sourceforge.net/projects/boost/files/boost/1.73.0/boost_1_73_0.tar.bz2
    source-checksum: sha1/6d6ed02b29c860fd21b274fc4e1f820855e765e9
    stage:
      - boost/
    prime:
      - -*

  mysql:
    plugin: cmake
    after: [boost]

    # Get from https://dev.mysql.com/downloads/mysql/
    source: https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-boost-8.0.28.tar.gz
    source-checksum: md5/362b8141ecaf425b803fe55292e2df98
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/
      - -DBUILD_CONFIG=mysql_release
      - -DCMAKE_BUILD_TYPE=Release
      - -DWITH_UNIT_TESTS=OFF
      - -DWITH_EMBEDDED_SERVER=OFF
      - -DWITH_ARCHIVE_STORAGE_ENGINE=OFF
      - -DWITH_EXAMPLE_STORAGE_ENGINE=OFF
      - -DWITH_BLACKHOLE_STORAGE_ENGINE=OFF
      - -DWITH_FEDERATED_STORAGE_ENGINE=OFF
      - -DWITH_PARTITION_STORAGE_ENGINE=OFF
      - -DWITH_PERFSCHEMA_STORAGE_ENGINE=OFF
      - -DWITH_DEBUG=OFF
      - -DWITH_INNODB_EXTRA_DEBUG=OFF
      - -DINSTALL_MYSQLTESTDIR=
      - -DDOWNLOAD_BOOST=OFF
      - -DWITH_BOOST=$SNAPCRAFT_STAGE

    override-build: |
      snapcraftctl build
      # MySQL v8 is massive. Strip it.
      find "$SNAPCRAFT_PART_INSTALL/bin" -type f -exec sh -c 'grep -IL . "$1" || strip --strip-all "$1"' sh "{}" \;

    build-packages:
      - libncurses5-dev
      - binutils
      - gcc-8
      - g++-8
      - libssl-dev
      - pkg-config

    stage:
      # Remove scripts that we'll be replacing with our own
      - -support-files/mysql.server
      - -COPYING

      # Remove unused binaries that waste space
      - -bin/comp_err
      - -bin/ibd2sdi
      - -bin/innochecksum
      - -bin/lz4_decompress
      - -bin/myisam_ftdump
      - -bin/myisam*
      - -bin/mysql_client_test
      - -bin/mysql_secure_installation
      - -bin/mysql_ssl_rsa_setup
      - -bin/mysql_tzinfo_to_sql
      - -bin/mysql_upgrade
      - -bin/mysqladmin
      - -bin/mysqlbinlog
      - -bin/mysqlcheck
      - -bin/mysqld_multi
      - -bin/mysqlimport
      - -bin/mysqlpump
      - -bin/mysqlrouter*
      - -bin/mysqlshow
      - -bin/mysqlslap
      - -bin/mysqltest*
      - -bin/perror
      - -bin/zlib_decompress

  # Copy over our MySQL scripts
  mysql-customizations:
    plugin: dump
    source: src/mysql/

  mysql-patches:
    source: src/mysql-patches
    plugin: dump
    prime:
      - -*

  fiduswriter-patches:
    source: src/fiduswriter-patches
    plugin: dump
    prime:
      - -*

  common:
    plugin: dump
    source: src/common/

  logrotate:
    plugin: dump
    source: src/logrotate/
    organize:
      config/*: config/logrotate/
      usr/sbin/*: bin/
    stage-packages: [logrotate]
    stage:
      - bin/*
      - config/*
      - utilities/*
    after: [envsubst]

  migrations:
    plugin: dump
    source: src/migrations/

  envsubst:
    plugin: nil
    stage-packages: [gettext-base]
    stage: [usr/bin/envsubst]

  hooks:
    plugin: dump
    source: src/hooks/
    organize:
      bin/: snap/hooks/

hooks:
  configure:
    plugs:
      - network-bind
      - network-control
      - network-observe

apps:
  daemon:
    command: 'bin/run-fiduswriter.py'
    daemon: simple
    plugs:
      - network-bind
      - network-control
      - network-observe

  manage:
    command: 'bin/manage.sh'
    plugs:
      - network-bind
      - network-control
      - network-observe
    adapter: full

  createsuperuser:
    command: 'bin/manage.sh createsuperuser'

  configure:
    command: 'bin/configure.py'
    plugs:
      - network-bind
      - network-control
      - network-observe
    adapter: full

  # MySQL daemon
  mysql:
    command: bin/start_mysql
    stop-command: support-files/mysql.server stop
    reload-command: bin/reload-mysql
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]

  # MySQL client
  mysql-client:
    command: bin/run-mysql
    plugs: [network, network-bind]

  logrotate:
    command: bin/run-logrotate
    daemon: simple
    restart-condition: on-failure
    timer: 00:00 # Run once a day at midnight

  mysqldump:
    command: bin/run-mysqldump
    plugs: [network, network-bind]

  languagetool:
    command: bin/run-languagetool.py
    environment:
      JAVA_HOME: $SNAP/usr/lib/jvm/java-11-openjdk-$SNAP_ARCH
      JAVA_BIN: $SNAP/usr/lib/jvm/java-11-openjdk-$SNAP_ARCH/bin/java
      PATH: $JAVA_HOME/bin:$PATH
    daemon: simple
    restart-condition: always
    plugs: [network-bind]

layout:
  /etc/magic:
    bind-file: $SNAP/etc/magic
  /etc/wgetrc:
    bind-file: $SNAP/etc/wgetrc
  /etc/nanorc:
    bind-file: $SNAP/etc/nanorc
  /usr/share/nano:
    bind: $SNAP/usr/share/nano
